name: Build and push Docker image to ECR and Deploy to EKS

on: 
  push:
    branches:
      - xyz

env:
  ECR_REPOSITORY: dotnetappsampleecr
  EKS_CLUSTER_NAME: kubernetes-dotnet-cluster
  AWS_DEFAULT_REG: ap-south-1

jobs:
  build-and-deploy-to-eks:
    runs-on: ubuntu-22.04
    steps:
    
    - name: Check out code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REG }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update Deployment Image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}    
      run: |
        sed -i "s|image: $ECR_REGISTRY/$ECR_REPOSITORY:.*|image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|" devops/k8s-files/manifests/deployment.yaml && \
        cat devops/k8s-files/manifests/deployment.yaml

    - name: Update kube config
      run: |
        # aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
        aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region ap-south-1
        echo "Update kube config successful"

    - name: Deploy to EKS with File
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }} 
      run: |
        kubectl apply -f 'devops/k8s-files/manifests/deployment.yaml'
        kubectl apply -f 'devops/k8s-files/manifests/service.yaml'
        echo "Completed !!"
   